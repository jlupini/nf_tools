/** * @fileoverview The script tests the functionality of the BE.comp object. * NOTE: It is assumed both TB and BE have been sourced. See * beforeeffects_tests.jsx to customize the overall BE test. * @author <a href="mailto:collin.brooks@gmail.com">Collin Brooks</a> * @version 0.1.0 dev */TB.module('BE.comp');BE.require('BE.comp');TB.test('BE.comp properties', function () {    TB.hasProperty(BE, "comp", "comp is a property of BE");    TB.hasProperty(BE.comp, "getLayerNames", "BE.comp.getLayerNames is a property of BE.comp");    TB.hasProperty(BE.comp, "getFilteredLayers", "BE.comp.getFilteredLayers is a property of BE.comp");    TB.hasProperty(BE.comp, "getAllSelectedProperties", "BE.comp.getAllSelectedProperties is a property of BE.comp");});TB.test('BE.comp.getLayerNames()', function () {    //Initialize the testConfig comp object    testConfig.comp.init();    var theComp = testConfig.comp.theComp,        testLayers = testConfig.comp.testLayers;    TB.deepEqual(        BE.comp.getLayerNames(theComp),        ["Camera 1", "Light 1", "Text 1", "Shape 1", "Null 1", "Solid 3", "Solid 2", "Solid 1"],        "Layer names are deeply equal!"    );    TB.deepEqual(        BE.comp.getLayerNames(theComp, "AVLayer"),        ["Null 1", "Solid 3", "Solid 2", "Solid 1"],        "AVLayer names are deeply equal!"    );    TB.deepEqual(        BE.comp.getLayerNames(theComp, "CameraLayer"),        ["Camera 1"],        "Camera layer filtered correctly!"    );    TB.deepEqual(        BE.comp.getLayerNames(theComp, "LightLayer"),        ["Light 1"],        "Light layer filtered correctly!"    );    //Clean up the testConfig comp object    testConfig.comp.clean();});TB.test('BE.comp.getFilteredLayers()', function () {    //Initialize the testConfig comp object    testConfig.comp.init();    var theComp = testConfig.comp.theComp,        testLayers = testConfig.comp.testLayers;    TB.equal(        BE.comp.getFilteredLayers(            theComp,            "AVLayer"        ).length,        [            testLayers["Null 1"],            testLayers["Solid 1"],            testLayers["Solid 2"],            testLayers["Solid 3"]        ].length,        "There are four 'AVLayers'"    );    TB.equal(        BE.comp.getFilteredLayers(            theComp,            "CameraLayer"        ).length,        [            testLayers["Camera 1"]        ].length,        "There is one 'CameraLayer'"    );    TB.equal(        BE.comp.getFilteredLayers(            theComp,            "LightLayer"        ).length,        [            testLayers["Light 1"]        ].length,        "There is one 'LightLayer'"    );    TB.equal(        BE.comp.getFilteredLayers(            theComp,            "ShapeLayer"        ).length,        [            testLayers["Shape 1"]        ].length,        "There is one 'ShapeLayer'"    );    TB.equal(        BE.comp.getFilteredLayers(            theComp,            "TextLayer"        ).length,        [            testLayers["Text 1"]        ].length,        "There is one 'TextLayer'"    );    TB.equal(        BE.comp.getFilteredLayers(            theComp,            "TextLayer"        ).length,        [            testLayers["Text 1"]        ].length,        "There is one 'TextLayer'"    );    //Clean up the testConfig comp object    testConfig.comp.clean();});//The BE.comp.getAllSelectedProperties method requires manual interaction to//test./*TB.test('BE.comp.getAllSelectedProperties()', function () {*/    /*//Initialize the testConfig comp object*/    /*testConfig.comp.init();*/    /*var theComp = testConfig.comp.theComp,*/        /*testLayers = testConfig.comp.testLayers;*/    /*alert("Please select some properties and then press play from " +*/        /*"within the ExtendScript application. Then, compare the " +*/        /*"properties you selected with the source alerted after " +*/        /*"pressing play.");*/    /*$.bp();*/    /*TB.ok(*/        /*confirm("The following source matches the properties I " +*/            /*"selected: " +*/            /*BE.comp.getAllSelectedProperties().toSource()),*/        /*"Selected properties match the returned source!"*/    /*);*/    /*testConfig.comp.clean();*//*});*/